Name: Chromium Browser History
Author: Andrew Rathbun
Email: andrew.d.rathbun@gmail.com
Reference: https://github.com/EricZimmerman/SQLECmd
SQLiteIdentifyQuery: |
  SELECT count(*) AS `Check`
  FROM sqlite_master
  WHERE type='table'
    AND (name='urls' OR name='visits' OR name='downloads' OR name='segments');
SQLiteIdentifyValue: 4
Categories:
  - Chrome
  - Browser
FilenameRegex: "History"
Globs:
  - "{{LinuxChromeProfiles}}/*/History"
  - "{{WindowsChromeProfiles}}/*/History"
  - "{{MacOSChromeProfiles}}/*/History"

Sources:
- name: Visits
  VQL: |
    SELECT ID,
       timestamp(winfiletime=(visit_time * 10) || 0) AS VisitTime,
       timestamp(winfiletime=(last_visit_time * 10) || 0) AS LastVisitedTime,
       URLTitle, URL, VisitCount, TypedCount,
       if(condition=hidden =~ '1', then="Yes", else="No") AS Hidden,
       VisitID, FromVisitID,
       visit_duration / 1000000 AS VisitDurationInSeconds,
       OSPath
    FROM Rows
    WHERE VisitTime > DateAfter
      AND VisitTime < DateBefore
      AND (URLTitle, URL) =~ FilterRegex
  SQL: |
    SELECT
      urls.id AS ID,
      visits.visit_time as visit_time,
      urls.last_visit_time as last_visit_time,
      urls.title AS URLTitle,
      urls.url AS URL,
      urls.visit_count AS VisitCount,
      urls.typed_count AS TypedCount,
      urls.hidden as hidden,
      visits.id AS VisitID,
      visits.from_visit AS FromVisitID,
      visits.visit_duration as visit_duration
    FROM urls
    LEFT JOIN visits ON urls.id = visits.url
    ORDER BY visits.visit_time ASC

- name: Downloads
  VQL: |
    LET StateLookup <= dict(`0`='In Progress', `1`='Complete', `2`="Cancelled", `3`="Interrupted", `4`="Interrupted")
    LET DangerType <= dict(`0`='Not Dangerous', `1`="Dangerous", `2`='Dangerous URL', `3`='Dangerous Content',
        `4`='Content May Be Malicious', `5`='Uncommon Content', `6`='Dangerous But User Validated',
        `7`='Dangerous Host', `8`='Potentially Unwanted', `9`='Whitelisted by Policy')
    LET InterruptReason <= dict(`0`= 'No Interrupt', `1`= 'File Error', `2`='Access Denied', `3`='Disk Full',
      `5`='Path Too Long',`6`='File Too Large', `7`='Virus', `10`='Temporary Problem', `11`='Blocked',
      `12`='Security Check Failed', `13`='Resume Error', `20`='Network Error', `21`='Operation Timed Out',
      `22`='Connection Lost', `23`='Server Down', `30`='Server Error', `31`='Range Request Error',
      `32`='Server Precondition Error', `33`='Unable to get file', `34`='Server Unauthorized',
      `35`='Server Certificate Problem', `36`='Server Access Forbidden', `37`='Server Unreachable',
      `38`='Content Length Mismatch', `39`='Cross Origin Redirect', `40`='Cancelled', `41`='Browser Shutdown',
      `50`='Browser Crashed')

    SELECT ID, GUID, CurrentPath, TargetPath, OriginalMIMEType, ReceivedBytes, TotalBytes,
      timestamp(winfiletime=(start_time * 10) || 0) AS StartTime,
      timestamp(winfiletime=(end_time * 10) || 0) AS EndTime,
      timestamp(winfiletime=(opened * 10) || 0) AS Opened,
      timestamp(winfiletime=(last_access_time * 10) || 0) AS LastAccessTime,
      timestamp(epoch=last_modified) AS LastModified,
      get(item=StateLookup, field=str(str=state), default="Unknown") AS State,
      get(item=DangerType, field=str(str=danger_type), default="Unknown") AS DangerType,
      get(item=InterruptReason, field=str(str=interrupt_reason), default="Unknown") AS InterruptReason,
      ReferrerURL, SiteURL, TabURL, TabReferrerURL, DownloadURL, OSPath
    FROM Rows
    WHERE LastAccessTime > DateAfter AND LastAccessTime < DateBefore
      AND (SiteURL, DownloadURL, TabURL, TabReferrerURL, ReferrerURL, DownloadURL) =~ FilterRegex

  SQL: |
    SELECT
      downloads.id AS ID,
      downloads.guid AS GUID,
      downloads.current_path AS CurrentPath,
      downloads.target_path AS TargetPath,
      downloads.original_mime_type AS OriginalMIMEType,
      downloads.received_bytes AS ReceivedBytes,
      downloads.total_bytes AS TotalBytes,
      downloads.start_time,
      downloads.end_time,
      downloads.opened,
      downloads.last_access_time,
      downloads.last_modified,
      downloads.state,
      downloads.danger_type,
      downloads.interrupt_reason,
      downloads.referrer AS ReferrerURL,
      downloads.site_url AS SiteURL,
      downloads.tab_url AS TabURL,
      downloads.tab_referrer_url AS TabReferrerURL,
      DownloadURL.url AS DownloadURL
    FROM downloads
    INNER JOIN downloads_url_chains AS DownloadURL ON downloads.id = DownloadURL.id
    ORDER BY downloads.id ASC

- name: Keywords
  VQL: |
    SELECT KeywordID, URLID,
       timestamp(winfiletime=(last_visit_time * 10) || 0) AS LastVisitedTime,
       KeywordSearchTerm, Title, URL, OSPath
    FROM Rows
    WHERE LastVisitedTime > DateAfter AND LastVisitedTime < DateBefore
      AND (Title, KeywordSearchTerm, URL) =~ FilterRegex

  SQL: |
    SELECT
      keyword_search_terms.keyword_id AS KeywordID,
      keyword_search_terms.url_id AS URLID,
      urls.last_visit_time,
      keyword_search_terms.term AS KeywordSearchTerm,
      urls.title AS Title,
      urls.url AS URL
    FROM keyword_search_terms
    INNER JOIN urls ON keyword_search_terms.url_id = urls.id
    ORDER BY keyword_search_terms.keyword_id ASC
